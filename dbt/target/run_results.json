{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.1", "generated_at": "2025-01-10T00:27:44.190234Z", "invocation_id": "ee0462b3-f15d-4b09-89bb-d19c3bf4c743", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-10T00:27:43.004160Z", "completed_at": "2025-01-10T00:27:43.037067Z"}, {"name": "execute", "started_at": "2025-01-10T00:27:43.043174Z", "completed_at": "2025-01-10T00:27:43.495405Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.49971628189086914, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.ski_weather.stg_weather_unlocked", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT *\n    FROM \"postgres\".\"public\".\"snow_reports\"\n    WHERE data_source = 'WeatherUnlocked'\n)\n\nSELECT\n    id,\n    resort_name,\n    state,\n    timestamp,\n    snow_depth,\n    new_snow_24h,\n    new_snow_72h,\n    new_snow_7d,\n    elevation,\n    temperature\nFROM source", "relation_name": "\"postgres\".\"public_staging\".\"stg_weather_unlocked\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-10T00:27:42.998860Z", "completed_at": "2025-01-10T00:27:43.013457Z"}, {"name": "execute", "started_at": "2025-01-10T00:27:43.014042Z", "completed_at": "2025-01-10T00:27:43.499110Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5043952465057373, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.ski_weather.stg_snotel", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT *\n    FROM \"postgres\".\"public\".\"snow_reports\"\n    WHERE data_source = 'SNOTEL'\n)\n\nSELECT\n    id,\n    resort_name,\n    state,\n    timestamp,\n    snow_depth,\n    new_snow_24h,\n    new_snow_72h,\n    new_snow_7d,\n    elevation,\n    temperature\nFROM source", "relation_name": "\"postgres\".\"public_staging\".\"stg_snotel\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-10T00:27:43.508697Z", "completed_at": "2025-01-10T00:27:43.513399Z"}, {"name": "execute", "started_at": "2025-01-10T00:27:43.513901Z", "completed_at": "2025-01-10T00:27:43.925498Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4187345504760742, "adapter_response": {"_message": "SELECT 10", "code": "SELECT", "rows_affected": 10}, "message": "SELECT 10", "failures": null, "unique_id": "model.ski_weather.top_snow_resorts", "compiled": true, "compiled_code": "WITH combined_reports AS (\n    SELECT *\n    FROM \"postgres\".\"public_staging\".\"stg_snotel\"\n    UNION ALL\n    SELECT *\n    FROM \"postgres\".\"public_staging\".\"stg_weather_unlocked\"\n),\n\nweekly_snow AS (\n    SELECT\n        resort_name,\n        state,\n        MAX(timestamp) as last_updated,\n        MAX(new_snow_7d) as snow_last_7d,\n        MAX(snow_depth) as current_snow_depth\n    FROM combined_reports\n    WHERE timestamp >= CURRENT_TIMESTAMP - INTERVAL '7 days'\n    GROUP BY resort_name, state\n)\n\nSELECT\n    resort_name,\n    state,\n    snow_last_7d,\n    current_snow_depth,\n    last_updated\nFROM weekly_snow\nORDER BY snow_last_7d DESC\nLIMIT 10", "relation_name": "\"postgres\".\"public_marts\".\"top_snow_resorts\"", "batch_results": null}], "elapsed_time": 2.5087835788726807, "args": {"log_level_file": "debug", "write_json": true, "use_colors_file": true, "invocation_command": "dbt --debug run --profiles-dir /home/ubuntu/.dbt", "log_format_file": "debug", "debug": true, "partial_parse_file_diff": true, "profiles_dir": "/home/ubuntu/.dbt", "printer_width": 80, "require_explicit_package_overrides_for_builtin_materializations": true, "select": [], "skip_nodes_if_on_run_start_fails": false, "which": "run", "static_parser": true, "favor_state": false, "log_path": "/home/ubuntu/ski_weather_pipeline/logs", "require_batched_execution_for_custom_microbatch_strategy": false, "defer": false, "introspect": true, "project_dir": "/home/ubuntu/ski_weather_pipeline", "show_resource_report": false, "populate_cache": true, "log_format": "default", "exclude": [], "log_file_max_bytes": 10485760, "source_freshness_run_project_hooks": false, "cache_selected_only": false, "indirect_selection": "eager", "vars": {}, "strict_mode": false, "macro_debugging": false, "empty": false, "require_resource_names_without_spaces": false, "quiet": false, "print": true, "require_nested_cumulative_type_params": false, "log_level": "info", "state_modified_compare_more_unrendered_values": false, "use_colors": true, "require_yaml_configuration_for_mf_time_spines": false, "send_anonymous_usage_stats": true, "state_modified_compare_vars": false, "warn_error_options": {"include": [], "exclude": []}, "partial_parse": true, "version_check": true}}